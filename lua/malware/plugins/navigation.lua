return {

   -- Telescope --
   {
      'nvim-telescope/telescope.nvim',
      tag = '0.1.5',
      dependencies = {
         'nvim-lua/plenary.nvim',
         { 'nvim-telescope/telescope-fzf-native.nvim', build = 'make' },
      },

      config = function()
         local telescope = require('telescope')
         local actions = require('telescope.actions')

         telescope.setup {
            defaults = {
               mappings = {
                  i = {
                     ['<C-j>'] = actions.move_selection_next,
                     ['<C-k>'] = actions.move_selection_previous,
                     ['<C-q>'] = actions.send_to_qflist + actions.open_qflist,
                  },
               },
            },
         }

         telescope.load_extension('fzf')
      end,
   },

   -- Telescope Undo Tree --
   {
      'debugloop/telescope-undo.nvim',
      dependencies = {
         'nvim-telescope/telescope.nvim',
         dependencies = { 'nvim-lua/plenary.nvim' },
      },
      keys = {
         {
            '<leader>u',
            '<cmd> Telescope undo <cr>',
            desc = 'Undo tree',
         }
      },

      opts = {},

      config = function(_, opts)
         local telescope = require('telescope')

         telescope.setup(opts or {})
         telescope.load_extension('undo')
      end,
   },

   -- Telescope Frequency --
   {
      'nvim-telescope/telescope-frecency.nvim',
      config = function()
         require('telescope').load_extension('frecency')
      end,
   },

   -- Telescope Select UI --
   {
      'nvim-telescope/telescope-ui-select.nvim',
      config = function()
         require('telescope').load_extension('ui-select')
      end,
   },

   -- File Explorer --
   {
      'simonmclean/triptych.nvim',
      event = 'VeryLazy',
      dependencies = {
         'nvim-lua/plenary.nvim',
         'nvim-tree/nvim-web-devicons',
      },
      init = function()
         vim.g.loaded_netrw = 1
         vim.g.loaded_netrwPlugin = 1

         require('triptych').setup()
      end,
   },

}
