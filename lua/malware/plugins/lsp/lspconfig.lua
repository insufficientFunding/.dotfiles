return {
   "neovim/nvim-lspconfig",

   event = { "BufReadPre", "BufNewFile" },

   dependencies = {
      "hrsh7th/cmp-nvim-lsp",

      { "antosha417/nvim-lsp-file-operations", config = true },
   },

   config = function()
      local lspconfig = require("lspconfig")

      local cmp_nvim_lsp = require("cmp_nvim_lsp")

      local on_attach = function(client, bufnr)
         require("malware.config.plugins.lsp").apply_keymap()
      end

      vim.diagnostic.config({
         underline = true,
         virtual_text = true,
         update_in_insert = true,
         severity_sort = true,
         signs = true,
      })

      local capabilities = cmp_nvim_lsp.default_capabilities()

      capabilities.textDocument.foldingRange = {
         dynamicRegistration = false,
         lineFoldingOnly = true,
      }

      lspconfig["lua_ls"].setup({
         capabilities = capabilities,
         on_attach = on_attach,

         settings = {
            Lua = {
               diagnostics = {
                  globals = { "vim" },
               },
               workspace = {
                  library = {
                     [vim.fn.stdpath("config") .. "/lsp-addons/lua-ls/"] = true,
                     [vim.fn.expand("$VIMRUNTIME/lua")] = true,
                     [vim.fn.expand("config") .. "/lua"] = true,
                  },
               },
            },
         },
      })

      lspconfig["clangd"].setup({
         capabilities = capabilities,
         on_attach = on_attach,
      })
   end,
}
