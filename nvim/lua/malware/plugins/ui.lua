return {
   -- Theme --
   {
      'olimorris/onedarkpro.nvim',
      priority = 1000,
      opts = {
         styles = {
            functions = 'italic',
            conditionals = 'italic',
            keywords = 'italic',
            comments = 'italic',
            virtual_text = 'italic',
            operators = 'italic',
            methods = 'italic',
         },

         highlights = {
            Whitespace = { fg = '#394148' },
            Error = { undercurl = true },
            --SpellBad = { gui = 'undercurl' },
            ErrorMsg = { italic = true, undercurl = true },
         },

         options = {
            terminal_colors = true,
            cursorline = true,
         },
      },
      config = function(_, opts)
         local onedark = require('onedarkpro')
         onedark.setup(opts)

         vim.cmd('colorscheme onedark_vivid')
      end,
   },

   -- Rainbow Brackets --
   {
      'HiPhish/rainbow-delimiters.nvim',
      config = function()
         vim.g.rainbow_delimiters = {}
      end,
   },

   -- Noice --
   {
      'folke/noice.nvim',
      event = 'VeryLazy',
      opts = {
         lsp = {
            override = {
               ['vim.lsp.utils.convert_input_to_markdown_lines'] = true,
               ['vim.lsp.utils.stylize_markdown'] = true,
               ['cmp.entry.get_documentation'] = true,
            },
            hover = {
               enabled = false,
            },
            signature = {
               enabled = false,
            },
         },
         cmdline = {
            view = 'cmdline',
         },
         popupmenu = {
            backend = 'cmp',
         },
         presets = {
            long_message_to_split = true,
            inc_rename = true,
            command_palette = true,
         },
         views = {
            cmdline = {
               position = {
                  row = '99%',
                  col = 0,
               },
            },
         },
      },
      dependencies = {
         'MunifTanjim/nui.nvim',
         'rcarriga/nvim-notify',
         'olimorris/onedarkpro.nvim',
      },
   },

   -- Statusline --
   {
      'nvim-lualine/lualine.nvim',

      dependencies = {
         'nvim-tree/nvim-web-devicons',
         'rmagatti/auto-session',
         'echasnovski/mini.sessions',
      },

      opts = {
         options = {
            icons_enabled = true,
            component_separators = '|',
            section_separators = { left = '', right = '' },
         },
         sections = {
            lualine_c = {},
            lualine_z = { 'datetime' },
         },
      },

      config = function(_, opts)
         local module = require('lualine')

         opts.sections.lualine_c = {
            require('malware.plugins.components.recording'),
            require('malware.plugins.components.session'),
         }

         ---@diagnostic disable-next-line: different-requires
         opts.options.theme = require('malware.config.plugins.lualine').get_theme()

         module.setup(opts)
      end,
   },

   -- Bufferline --
   {
      'akinsho/bufferline.nvim',
      version = '*',
      dependencies = {
         'nvim-tree/nvim-web-devicons',
      },
      init = function()
         require('bufferline').setup({
            options = {
               separator_style = 'slant',
               themable = false,
               diagnostics = 'nvim_lsp',
               indicator = {
                  style = 'underline',
               },
               diagnostics_indicator = function(count, level, diagnostics_dict, context)
                  local icon = level:match('error') and ' ' or ' '
                  return ' ' .. icon .. count
               end,
            },
         })
      end,
   },

   -- Indent Blankline --
   {
      'lukas-reineke/indent-blankline.nvim',
      main = 'ibl',
      opts = {
         indent = {
            char = '│',
            highlight = { 'Whitespace' },
         },
         whitespace = {
            highlight = { 'Whitespace' },
            remove_blankline_trail = false,
         },
         scope = {
            show_start = false,
            show_end = false,
         },
      },
   },

   -- Status Columns --
   {
      'luukvbaal/statuscol.nvim',
      branch = '0.10',
      config = function()
         local builtin = require('statuscol.builtin')

         vim.api.nvim_set_hl(0, 'FoldColumn', { fg = '#606060' })

         require('statuscol').setup({
            segments = {
               { text = { '%s' } },
               { text = { builtin.lnumfunc } },
               { text = { ' ', builtin.foldfunc, ' ' } },
            },
         })
      end,
   },

   -- Lspkind --
   {
      'onsails/lspkind-nvim',
   },
}
